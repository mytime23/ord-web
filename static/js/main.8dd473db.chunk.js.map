{"version":3,"sources":["components/Layout.tsx","Providers.tsx","components/Home.tsx","components/About.tsx","components/Docs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Layout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","isOpen","state","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","src","process","width","height","alt","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","children","Component","InitState","title","handeChange","PlayContext","React","createContext","PlayProvider","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","inherits","createClass","key","value","Provider","Home","Providers_PlayProvider","components_Layout","Container","fluid","Row","Col","md","size","offset","About","info","Alert","About_Info","About_List","Info","_this2","event","_this$context","context","Button","contextType","List","_this3","Consumer","Fragment","Docs","App","BrowserRouter","basename","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dd473db.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button\r\n } from 'reactstrap';\r\nimport './Styles.css';\r\n\r\ninterface IComponentState {\r\n  isOpen: boolean,\r\n}\r\n\r\nclass Layout extends Component<{}, IComponentState> {\r\n    constructor(props: {}) {\r\n        super(props);    \r\n        this.state = {\r\n          isOpen: false,\r\n        };\r\n    }\r\n \r\n\r\n    public toggle = () => {\r\n      this.setState({\r\n        isOpen: !this.state.isOpen\r\n      });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand tag={Link} to=\"/\">\r\n              <img src={process.env.PUBLIC_URL + '/Ocean.png'} width=\"32px\" height=\"32px\" alt=\"Logo\" />{'    '}\r\n              ORD WEB\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/home\">首頁</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/about\">關於</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/docs\">文件</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n            <div className=\"main\">\r\n                {this.props.children}\r\n            </div>\r\n            <div>\r\n              <p className=\"footer text-center\">Copyright ©2019 Tim </p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\n// import { Redirect } from 'react-router-dom';\r\n// import { IpcNetConnectOpts } from 'net';\r\n// import { inherits } from 'util';\r\n\r\nconst InitState = {\r\n    color: \"primary\" ,\r\n    title: \"Context\",\r\n    handeChange: () => {\r\n        return InitState.title = \"Update Context\";\r\n    }\r\n}\r\n\r\ntype State = Readonly<typeof InitState>;\r\n\r\nexport const PlayContext = React.createContext(InitState); // React 16.3 support\r\n\r\nexport class PlayProvider extends Component<{}, State> {\r\n    readonly state: State = InitState;\r\n   \r\n    render() {\r\n        {}\r\n        return(\r\n            <PlayContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </PlayContext.Provider>\r\n        )\r\n    }\r\n}\r\n  \r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Layout from './Layout';\r\nimport { PlayProvider } from '../Providers';\r\n\r\nclass Home extends Component {\r\n    render(){\r\n        return(\r\n            <PlayProvider>\r\n            <Layout>\r\n              <Container className=\"home\" fluid>\r\n                <Row className=\"topic-1 h-70\">                \r\n                  <Row>\r\n                      <Col md={{ size: 12 }}>\r\n                        <h1 className=\"display-4 ml-2\">Ocean Reality Design</h1>\r\n                      </Col>\r\n                      <Col md={{ size: 6, offset: 1 }}>\r\n                        <div className=\"ml-3 mb-3\">\r\n                        <img src={process.env.PUBLIC_URL + '/images/pic80.jpg'} alt=\"80x80\" />\r\n                        </div>                         \r\n                      </Col>\r\n                      <Col md={{ size: 5 }}>\r\n                        <ul>\r\n                          <li>開發實境應用</li>\r\n                          <li>前端技術開發與紀錄</li>\r\n                          <li>ORD相關展示</li>  \r\n                        </ul>\r\n                      </Col>\r\n                    </Row>\r\n                </Row>\r\n                <Row className=\"topic-2 h-70\">\r\n                  <Row>\r\n                    <Col md={{ size: 12 }}>\r\n                      <h1 className=\"display-4 ml-2\">應用</h1>\r\n                    </Col>\r\n                    <Col md={{ size: 4, offset: 2 }}>\r\n                        <ul>\r\n                          <li>漸進式網頁 (Progressive Web App)</li>\r\n                          <li>跨平台桌面應用 (Desktop App)</li>\r\n                          <li>可攜式擴增與虛擬實境應用(AR/VR App)</li>  \r\n                        </ul>                       \r\n                    </Col>\r\n                    <Col md={{ size: 4 }}>\r\n                        <div className=\"ml-3 mb-3\">\r\n                        <img src={process.env.PUBLIC_URL + '/images/pic80.jpg'} alt=\"80x80\" />\r\n                        </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Row>\r\n                <Row className=\"topic-3 h-70\">\r\n                <Row>\r\n                  <Col md={{ size: 12 }}>\r\n                  <h1 className=\"display-4 ml-2\">技術</h1>\r\n                  </Col>\r\n                  <Col md={{ size: 4, offset: 2 }}>\r\n                    <div className=\"ml-3 mb-3\">\r\n                    <img src={process.env.PUBLIC_URL + '/images/pic80.jpg'} alt=\"80x80\" />\r\n                    </div>                         \r\n                  </Col>\r\n                  <Col md={{ size: 4 }}>\r\n                    <ul>\r\n                      <li>使用 React 建構 PWA</li>\r\n                      <li>使用 Electron 建構 Desktop App</li>\r\n                      <li>使用 React 360 建構 AR/VR App</li>  \r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n            </Row>\r\n              </Container>\r\n            </Layout>       \r\n          </PlayProvider>\r\n        );\r\n    }\r\n}\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport Layout from './Layout';\r\nimport { PlayContext, PlayProvider } from '../Providers';\r\nimport './Styles.css';\r\n\r\ninterface IComponentState {\r\n    info: string \r\n}\r\n\r\nclass About extends Component<{}, IComponentState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            info: ''\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            info: 'Hello Context API'\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let { info } = this.state; \r\n        return(\r\n            <PlayProvider>\r\n              <Layout>\r\n                <div>\r\n                   <h1>About</h1>\r\n                   <Alert color=\"success\">{info}</Alert>\r\n                   <Info toggle={this.toggle} />\r\n                   <List />\r\n                </div>\r\n              </Layout>  \r\n            </PlayProvider>             \r\n        );\r\n    }\r\n}\r\n\r\ninterface IInfoProps {\r\n    toggle(event: any): void;\r\n}\r\n\r\nclass Info extends Component<IInfoProps, {}> {\r\n    constructor(props: IInfoProps) {\r\n        super(props)\r\n    }\r\n    static contextType = PlayContext; //React 16.6 support\r\n \r\n    toggle = () => {\r\n        this.props.toggle(event);\r\n    }\r\n    render() {\r\n        let { color, title}  = this.context;\r\n        return(\r\n            <div>\r\n                <h1>PWA APP About Info 2</h1>\r\n                <Button \r\n                  color={color} \r\n                  onClick={this.toggle}>\r\n                  {title}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\nclass List extends Component {\r\n    render() {\r\n        return(\r\n            <PlayContext.Consumer>\r\n             { (context) => (\r\n                 <>\r\n                 <h1>This is Title List {context.title}</h1>\r\n                 <Button color=\"warning\" onClick= {() =>\r\n                    {\r\n                        return this.setState({ handeChange: context.handeChange()});\r\n                    }}>\r\n                    Update\r\n                 </Button>\r\n                 </>\r\n             )}\r\n            </PlayContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport Layout from './Layout';\r\nimport { PlayProvider} from '../Providers';\r\n\r\nclass Docs extends Component {\r\n    render(){\r\n        return(\r\n            <PlayProvider>\r\n                <Layout>\r\n                    <Container>\r\n                        <Row>\r\n                            <h1>Docs</h1>\r\n                        </Row>\r\n                    </Container>\r\n                </Layout>  \r\n            </PlayProvider>    \r\n        );\r\n    }\r\n}\r\nexport default Docs;\r\n","import React, { Component } from 'react';\nimport { Link,BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Docs from './components/Docs';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route path='/home' component={Home}/>      \n        <Route path='/about' component={About}/>\n        <Route path='/docs' component={Docs}/>\n        {/* <Redirect to=\"/\" /> */}\n      </Switch>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}